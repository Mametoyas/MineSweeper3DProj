extends Node3D

@export var enemy_scene: PackedScene
@export var pool_size: int = 50              # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏®‡∏±‡∏ï‡∏£‡∏π‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏ô Pool
@export var spawn_interval: float = 3.0      # ‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£ spawn ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
@export var min_interval: float = 0.5        # ‡πÄ‡∏£‡πá‡∏ß‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï
@export var spawn_accel: float = 0.95        # ‡∏¢‡∏¥‡πà‡∏á‡∏ô‡∏≤‡∏ô spawn ‡∏¢‡∏¥‡πà‡∏á‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô
@export var spawn_distance: float = 50.0     # ‡∏£‡∏∞‡∏¢‡∏∞ spawn ‡πÇ‡∏î‡∏¢‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏à‡∏≤‡∏Å Player
@export var max_active_enemies: int = 60     # ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏®‡∏±‡∏ï‡∏£‡∏π‡∏ö‡∏ô‡∏â‡∏≤‡∏Å

@onready var path = $Path3D
@onready var path_follow = $Path3D/PathFollow3D
@onready var spawn_timer = $EnemySpawnTimer
@onready var player = get_tree().get_first_node_in_group("Player")

var enemy_pool: Array = []
var active_enemies: int = 0
var wave_count: int = 1   # ‡∏ô‡∏±‡∏ö‡∏£‡∏≠‡∏ö wave


# ---------------------------
# üß† ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏° Pool ‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°
# ---------------------------
func _ready():
	if not enemy_scene:
		push_warning("‚ö†Ô∏è enemy_scene ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô Inspector")
		return

	print("üõ† Initializing Enemy Pool...")

	for i in range(pool_size):
		var enemy = enemy_scene.instantiate()
		enemy.visible = false
		enemy.set_physics_process(false)
		enemy.set_process(false)
		enemy.add_to_group("Enemy")

		# ‚úÖ ‡πÄ‡∏ã‡πá‡∏ï spawner ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ä‡πá‡∏Å)
		enemy.spawner = self

		add_child(enemy)
		enemy_pool.append(enemy)

	spawn_timer.wait_time = spawn_interval
	spawn_timer.timeout.connect(_on_spawn_timer_timeout)
	spawn_timer.start()

	add_to_group("Spawner")
	print("‚úÖ Enemy pool created:", enemy_pool.size())


# ---------------------------
# üîÅ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠ Timer ‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤
# ---------------------------
func _on_spawn_timer_timeout():
	_spawn_enemy_from_pool()

	# ‚úÖ ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏Å‡∏≤‡∏£ spawn ‡πÅ‡∏ö‡∏ö‡πÑ‡∏î‡∏ô‡∏≤‡∏°‡∏¥‡∏Å
	if active_enemies < max_active_enemies:
		spawn_interval = max(spawn_interval * spawn_accel, min_interval)
	else:
		spawn_interval = clamp(spawn_interval * 1.2, min_interval, 5.0)

	spawn_timer.wait_time = spawn_interval
	spawn_timer.start()


# ---------------------------
# üíÄ ‡∏î‡∏∂‡∏á‡∏®‡∏±‡∏ï‡∏£‡∏π‡∏ß‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å Pool
# ---------------------------
func _spawn_enemy_from_pool():
	if not player:
		return

	if active_enemies >= max_active_enemies:
		return  # ‡∏ñ‡πâ‡∏≤‡πÄ‡∏ï‡πá‡∏°‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏°‡πà spawn ‡πÄ‡∏û‡∏¥‡πà‡∏°

	for enemy in enemy_pool:
		if not enemy.visible and is_instance_valid(enemy):
			# ‚úÖ ‡∏™‡∏∏‡πà‡∏°‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ö‡∏ô Path3D ‡∏£‡∏≠‡∏ö Player
			path_follow.progress_ratio = randf()
			var pos = path_follow.global_position
			var random_offset = Vector3(randf_range(-10, 10), 0, randf_range(-10, 10))
			enemy.global_position = pos + random_offset

			# ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Enemy ‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà
			if enemy.has_method("reset_state"):
				enemy.reset_state()

			enemy.visible = true
			enemy.set_physics_process(true)
			enemy.set_process(true)
			active_enemies += 1
			return

	# ‚úÖ ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏®‡∏±‡∏ï‡∏£‡∏π‡∏ß‡πà‡∏≤‡∏á ‚Üí ‡∏Ç‡∏¢‡∏≤‡∏¢ Pool (‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î)
	if enemy_pool.size() < 100:
		var new_enemy = enemy_scene.instantiate()
		new_enemy.visible = true
		new_enemy.spawner = self  # ‚úÖ ‡πÄ‡∏ã‡πá‡∏ï spawner ‡∏ï‡∏£‡∏á ‡πÜ
		add_child(new_enemy)
		enemy_pool.append(new_enemy)
		active_enemies += 1
		print("‚öôÔ∏è Pool expanded to:", enemy_pool.size())


# ---------------------------
# üîÑ ‡∏Ñ‡∏∑‡∏ô‡∏®‡∏±‡∏ï‡∏£‡∏π‡πÄ‡∏Ç‡πâ‡∏≤‡∏û‡∏π‡∏• (‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏à‡∏≤‡∏Å enemy.gd)
# ---------------------------
func return_enemy_to_pool(enemy):
	if not is_instance_valid(enemy):
		return

	if enemy in enemy_pool:
		enemy.visible = false
		enemy.set_physics_process(false)
		enemy.set_process(false)
		enemy.global_position = Vector3.ZERO
		active_enemies = max(active_enemies - 1, 0)
